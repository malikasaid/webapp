<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contoso Sample Web Chat</title>
    <script src="https://cdn.botframework.com/botframework-webchat/latest/webchat.js"></script>
    <script type="text/javascript" src="https://alcdn.msauth.net/lib/1.2.0/js/msal.js"></script>
    <script src="https://unpkg.com/@azure/storage-blob@10.3.0/browser/azure-storage.blob.min.js"
            integrity="sha384-fsfhtLyVQo3L3Bh73qgQoRR328xEeXnRGdoi53kjo1uectCfAHFfavrBBN2Nkbdf"
            crossorigin="anonymous"></script>
    <script type="text/javascript">
        if (typeof Msal === 'undefined') document.write(unescape("%3Cscript src='https://alcdn.msftauth.net/lib/1.2.0/js/msal.js' type='text/javascript' %3E%3C/script%3E"));
    </script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap');
        html, body {
            height: 100%;
        }
        body {
            margin: 0;
            font-family: 'Open Sans', sans-serif;
        }
        h1 {
            color: white;
            font-family: "Montserrat", sans-serif;
            font-size: 16px;
            line-height: 20px;
            margin: 0;
            padding: 0 20px;
            font-weight: bold;
        }
        #banner {
            align-items: center;
            background: grey;
            display: flex;
            justify-content: flex-start;
            height: 50px;
            border-radius: 25px;
            margin: 10px;
            padding: 10px 20px;
            position: relative;
        }
        #banner img {
            height: 40px;
            width: auto;
            margin-right: 20px;
        }
        #webchat {
            height: calc(93% - 50px);
            overflow: hidden;
            position: fixed;
            top: 80px;
            width: 100%;
        }
    </style>
</head>
<body>
<div>
    <div id="banner">
        <img src="logo" alt="Company Logo">
        <h1>Max - Your Virtual Assistant</h1>
        <div style="margin-left: auto;">
            <label id="userName" name="userName" style="width:75%;height:15px;border-color: Transparent;">Not logged in.</label>
            <button id="login" name="login" onclick="onSignInClick()" style="float: right;background-color: aliceblue;">Log In</button>
        </div>
    </div>
    <div id="webchat" role="main"></div>
</div>
<script>
    var clientApplication;
    var userAvatarUrl = 'https://www.feelgoodlearnandmassage.co.uk/wp-content/uploads/2015/03/personicon.png';

    (function () {
        var msalConfig = {
            auth: {
                clientId: 'link',
                authority: 'link'
            },
            cache: {
                cacheLocation: 'localStorage',
                storeAuthStateInCookie: false
            }
        };
        if (!clientApplication) {
            clientApplication = new Msal.UserAgentApplication(msalConfig);
        }
    })();

    function onSignin(idToken) {
        let user = clientApplication.getAccount();
        document.getElementById("userName").innerHTML = "Logged in as " + user.name;
        getUserProfilePicture();
        startChat();
    }

    function onSignInClick() {
        let requestObj = { scopes: ["user.read", 'openid', 'profile'] };
        clientApplication.loginPopup(requestObj).then(onSignin).catch(function (error) {
            console.log(error)
        });
    }

    async function getUserProfilePicture() {
        try {
            let tokenResponse = await clientApplication.acquireTokenSilent({ scopes: ["user.read"] });
            let accessToken = tokenResponse.accessToken;
            let response = await fetch('https://graph.microsoft.com/v1.0/me/photo/$value', {
                headers: { 'Authorization': `Bearer ${accessToken}` }
            });
            if (response.ok) {
                let blob = await response.blob();
                userAvatarUrl = URL.createObjectURL(blob);
            }
        } catch (error) {
            console.error("Failed to fetch user profile picture:", error);
        }
    }

    function startChat() {
        (async function main() {
            var theURL = "link";
            const { token } = await fetchJSON(theURL);
            const directLine = window.WebChat.createDirectLine({ token });

            const store = WebChat.createStore({}, ({ dispatch }) => next => action => {
                if (action.type === 'DIRECT_LINE/CONNECT_FULFILLED') {
                    dispatch({
                        type: 'WEB_CHAT/SEND_EVENT',
                        payload: {
                            name: 'startConversation',
                            type: 'event',
                            value: { text: "hello" }
                        }
                    });
                }
                return next(action);
            });

            const styleSet = window.WebChat.createStyleSet({
                bubbleFromUserBackground: '#EAEAEA',
                bubbleFromUserTextColor: 'Black',
                bubbleBackground: '#EAEAEA',
                bubbleTextColor: 'Black',
                sendBoxBackground: 'linear-gradient(45deg, #FF8B21, #FF9F33, #FFB545, #FF8B21)',
                bubbleBorderRadius: 30,
                bubbleFromUserBorderColor: '#EAEAEA',
                bubbleFromBotBorderColor: '#EAEAEA',
                bubbleFromUserBorderRadius: 20,
                sendBoxBorder: '1px solid #000000',
                sendBoxTextColor: '#2D2D2D',
                sendBoxButtonColor: '#00669E',
                sendBoxButtonBackground: '#FFF3E0',
                sendBoxButtonBorderRadius: 50,
                sendBoxButtonHeight: 'auto',
                sendBoxButtonWidth: 'auto',
                sendBoxButtonPadding: 0,
                sendBoxButtonDisplay: 'flex',
                sendBoxButtonAlignItems: 'center',
                sendBoxTextBox: {
                    fontWeight: 'bold'
                }
            });

            styleSet.textContent = {
                ...styleSet.textContent,
                fontFamily: "'Open Sans', 'Comic Sans MS', 'Arial', sans-serif",
                fontWeight: 'normal'
            };

            const avatarOptions = {
                userAvatarImage: userAvatarUrl,
                botAvatarImage: 'https://www.paidmembershipspro.com/wp-content/uploads/2022/01/automatorwp-icon.png',
                botAvatarInitials: 'BT',
                userAvatarInitials: 'Me',
            };

            window.WebChat.renderWebChat({
                directLine,
                styleSet,
                styleOptions: {
                    ...avatarOptions,
                    hideUploadButton: true
                }
            }, document.getElementById('webchat'));
        })().catch(err => console.error("An error occurred: " + err));
    }

    async function fetchJSON(url, options = {}) {
        const res = await fetch(url, {
            ...options,
            headers: {
                ...options.headers,
                accept: 'application/json'
            }
        });

        if (!res.ok) {
            throw new Error(`Failed to fetch JSON due to ${res.status}`);
        }

        return await res.json();
    }

    function getOAuthCardResourceUri(activity) {
        if (activity &&
            activity.attachments &&
            activity.attachments[0] &&
            activity.attachments[0].contentType === 'application/vnd.microsoft.card.oauth' &&
            activity.attachments[0].content.tokenExchangeResource) {
            return activity.attachments[0].content.tokenExchangeResource.uri;
        }
    }

    function exchangeTokenAsync(resourceUri) {
        let user = clientApplication.getAccount();
        if (user) {
            let requestObj = {
                scopes: [resourceUri]
            };
            return clientApplication.acquireTokenSilent(requestObj)
                .then(function (tokenResponse) {
                    return tokenResponse.accessToken;
                })
                .catch(function (error) {
                    console.log(error);
                });
        } else {
            return Promise.resolve(null);
        }
    }
</script>
</body>
</html>
