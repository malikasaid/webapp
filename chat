<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contoso Sample Web Chat</title>
    <script src="https://cdn.botframework.com/botframework-webchat/latest/webchat.js"></script>
    <script type="text/javascript" src="https://alcdn.msauth.net/lib/1.2.0/js/msal.js"></script>
    <script src="https://unpkg.com/@azure/storage-blob@10.3.0/browser/azure-storage.blob.min.js"
            integrity="sha384-fsfhtLyVQo3L3Bh73qgQoRR328xEeXnRGdoi53kjo1uectCfAHFfavrBBN2Nkbdf"
            crossorigin="anonymous"></script>
    <script type="text/javascript">
        if (typeof Msal === 'undefined') document.write(unescape("%3Cscript src='https://alcdn.msftauth.net/lib/1.2.0/js/msal.js' type='text/javascript' %3E%3C/script%3E"));
    </script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap');
        html, body {
            height: 100%;
        }
        body {
            margin: 0;
            font-family: 'Open Sans', sans-serif;
        }
        h1 {
            color: white;
            font-family: "Montserrat", sans-serif;
            font-size: 16px;
            line-height: 20px;
            margin: 0;
            padding: 0 20px;
            font-weight: bold;
        }
        #banner {
            align-items: center;
            background: grey;
            display: flex;
            justify-content: flex-start;
            height: 50px;
            border-radius: 25px;
            margin: 10px;
            padding: 10px 20px;
            position: relative;
        }
        #banner img {
            height: 40px;
            width: auto;
            margin-right: 20px;
        }
        #webchat {
            height: calc(93% - 50px);
            overflow: hidden;
            position: fixed;
            top: 80px;
            width: 100%;
        }
    </style>
</head>
<body>
<div>
    <div id="banner">
        <img src="logo" alt="Company Logo">
        <h1>Max - Your Virtual Assistant</h1>
        <div style="margin-left: auto;">
            <label id="userName" name="userName" style="width:75%;height:15px;border-color: Transparent;">Not logged in.</label>
            <button id="login" name="login" onclick="onSignInClick()" style="float: right;background-color: aliceblue;">Log In</button>
        </div>
    </div>
    <div id="webchat" role="main"></div>
</div>

<script>
    var clientApplication;
    var directLine;
    var userId;
    var store;

    (function () {
        var msalConfig = {
            auth: {
                clientId: 'id',
                authority: 'link'
            },
            cache: {
                cacheLocation: 'localStorage',
                storeAuthStateInCookie: false
            }
        };
        if (!clientApplication) {
            clientApplication = new Msal.UserAgentApplication(msalConfig);
        }
    }());

    function onSignin() {
        let user = clientApplication.getAccount();
        document.getElementById("userName").innerHTML = "Currently logged in as " + user.name;
        startWebChat();
    }

    function onSignInClick() {
        let requestObj = {
            scopes: ["user.read", 'openid', 'profile']
        };

        clientApplication.loginPopup(requestObj).then(onSignin).catch(function (error) {
            console.log(error);
        });
    }

    function startWebChat() {
        (async function () {
            var theURL = "link"; // you can find the token URL via the mobile app channel configuration

            userId = clientApplication.account?.accountIdentifier != null ?
                ("You-customized-prefix" + clientApplication.account.accountIdentifier).substr(0, 64)
                : (Math.random().toString() + Date.now().toString()).substr(0, 64);

            const { token } = await fetchJSON(theURL);
            directLine = window.WebChat.createDirectLine({ token });

            store = WebChat.createStore({}, ({ dispatch }) => next => action => {
                const { type } = action;
                if (action.type === 'DIRECT_LINE/CONNECT_FULFILLED') {
                    dispatch({
                        type: 'WEB_CHAT/SEND_EVENT',
                        payload: {
                            name: 'startConversation',
                            type: 'event',
                            value: { text: "hello" }
                        }
                    });
                    return next(action);
                }
                if (action.type === 'DIRECT_LINE/INCOMING_ACTIVITY') {
                    const activity = action.payload.activity;
                    let resourceUri;
                    if (activity.from && activity.from.role === 'bot' &&
                        (resourceUri = getOAuthCardResourceUri(activity))) {
                        exchangeTokenAsync(resourceUri).then(function (token) {
                            if (token) {
                                directLine.postActivity({
                                    type: 'invoke',
                                    name: 'signin/tokenExchange',
                                    value: {
                                        id: activity.attachments[0].content.tokenExchangeResource.id,
                                        connectionName: activity.attachments[0].content.connectionName,
                                        token
                                    },
                                    "from": {
                                        id: userId,
                                        name: clientApplication.account.name,
                                        role: "user"
                                    }
                                }).subscribe(
                                    id => {
                                        if (id === 'retry') {
                                            return next(action);
                                        }
                                    },
                                    error => {
                                        return next(action);
                                    }
                                );
                                return;
                            } else {
                                return next(action);
                            }
                        });
                    } else {
                        return next(action);
                    }
                } else {
                    return next(action);
                }
            });

            const styleSet = window.WebChat.createStyleSet({
                bubbleFromUserBackground: '#EAEAEA',
                bubbleFromUserTextColor: 'Black',
                bubbleBackground: '#EAEAEA',
                bubbleTextColor: 'Black',
                sendBoxBackground: 'linear-gradient(45deg, #FF8B21, #FF9F33, #FFB545, #FF8B21)',
                bubbleBorderRadius: 30,
                bubbleFromUserBorderColor: '#EAEAEA',
                bubbleFromBotBorderColor: '#EAEAEA',
                bubbleFromUserBorderRadius: 20,
                sendBoxBorder: '1px solid #000000', /* Black border for send box */
                sendBoxTextColor: '#2D2D2D',
                sendBoxButtonColor: '#00669E',
                sendBoxButtonBackground: '#FFF3E0',
                sendBoxButtonBorderRadius: 50,
                sendBoxButtonHeight: 'auto',
                sendBoxButtonWidth: 'auto',
                sendBoxButtonPadding: 0,
                sendBoxButtonDisplay: 'flex',
                sendBoxButtonAlignItems: 'center',
                sendBoxTextBox: {
                    fontWeight: 'bold'
                }
            });

            styleSet.textContent = {
                ...styleSet.textContent,
                fontFamily: "'Open Sans', 'Comic Sans MS', 'Arial', sans-serif",
                fontWeight: 'normal'
            };

            const avatarOptions = {
                userAvatarImage: 'https://www.feelgoodlearnandmassage.co.uk/wp-content/uploads/2015/03/personicon.png',
                botAvatarImage: 'https://www.paidmembershipspro.com/wp-content/uploads/2022/01/automatorwp-icon.png',
                botAvatarInitials: 'BT',
                userAvatarInitials: 'Me',
            };

            window.WebChat.renderWebChat({
                directLine,
                store,
                styleSet,
                styleOptions: {
                    ...avatarOptions,
                    hideUploadButton: true
                }
            }, document.getElementById('webchat'));
        })().catch(err => console.error("An error occurred: " + err));
    }

    async function fetchJSON(url, options = {}) {
        const res = await fetch(url, {
            ...options,
            headers: {
                ...options.headers,
                accept: 'application/json'
            }
        });

        if (!res.ok) {
            throw new Error(`Failed to fetch JSON due to ${res.status}`);
        }

        return await res.json();
    }

    function getOAuthCardResourceUri(activity) {
        if (activity &&
            activity.attachments &&
            activity.attachments[0] &&
            activity.attachments[0].contentType === 'application/vnd.microsoft.card.oauth' &&
            activity.attachments[0].content.tokenExchangeResource) {
            return activity.attachments[0].content.tokenExchangeResource.uri;
        }
    }

    function exchangeTokenAsync(resourceUri) {
        let user = clientApplication.getAccount();
        if (user) {
            let requestObj = {
                scopes: [resourceUri]
            };
            return clientApplication.acquireTokenSilent(requestObj)
                .then(function (tokenResponse) {
                    return tokenResponse.accessToken;
                })
                .catch(function (error) {
                    console.log(error);
                });
        } else {
            return Promise.resolve(null);
        }
    }
</script>
</body>
</html>
